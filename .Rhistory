library(reticulate)
install.packages(c("cachem", "evaluate", "httpuv", "httr", "httr2", "later", "profvis", "rlang", "sass", "testthat", "tzdb", "viridisLite", "vroom", "waldo", "xml2"))
library(reticulate)
library(reticulate)
use_python("/Users/Patricio/anaconda3/bin/python3")
use_python("C:\Users\Patricio\anaconda3/python3")
use_python("/Users/Patricio/anaconda3/python3")
use_python("\Users\Patricio\anaconda3")
use_python("\Users\Patricio\anaconda3\python3")
use_python("\users\Patricio\anaconda3\python3")
knitr::opts_chunk$set(echo = TRUE)
c(1,2,3)
scan()
vec<- c(16,0,1,20,1,7,88,5,1,9)
fix(vec)
vec
par(mfrow = c(1,2))
plot = plot(exp(1:20), xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lineal")
plotlog = plot( exp(1:20), log = "y" , xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lodaritmica en el eje y")
plot(alumnos,notas, pch=16, col= "mediumvioletred", xlab= "Alumnos", ylab= "Notas",
main = "Notas alumnos 2023")
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas, pch=16, col= "mediumvioletred", xlab= "Alumnos", ylab= "Notas",
main = "Notas alumnos 2023")
par(mfrow = c(1,2))
plot = plot(exp(1:20), xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lineal")
plotlog = plot( exp(1:20), log = "y" , xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lodaritmica en el eje y")
par(mfrow = c(1,2))
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas, pch=16, col= "mediumvioletred", xlab= "Alumnos", ylab= "Notas",
main = "Notas alumnos 2023")
par(mfrow = c(1,1))
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas, pch=16, col= "mediumvioletred", xlab= "Alumnos", ylab= "Notas",
main = "Notas alumnos 2023")
plot(alumnos,notas, pch=16, col= "mediumvioletred", xlab= "Alumnos", ylab= "Notas",
main = "Notas alumnos 2023", type = "b")
par(mfrow = c(1,2))
plot = plot(exp(1:20), xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lineal")
plotlog = plot( exp(1:20), log = "y" , xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lodaritmica en el eje y")
par(mfrow = c(3,2))
plot(x,y pch =  23, cex = 2, col = "blue", type = "p")
x = c(50:59)
y = c(2, 9, 25, 3, 100, 77, 62, 54, 19, 40)
plot(x,y pch =  23, cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23,  cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23,  cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23, cex = 2, col = "blueviolet", type = "l")
plot(x,y, pch = 23, cex = 2, col = "gold", type = "b")
plot(x,y, pch = 23, cex = 2, col = "deeppink", type = "o")
plot(x,y, pch = 23, cex = 2, col = "springgreen", type = "h")
plot(x,y, pch = 23, cex = 2, col = "firebrick1", type = "s")
par(mfrow = c(1,1))
par(mfrow = c(3,2))
x = c(50:59)
y = c(2, 9, 25, 3, 100, 77, 62, 54, 19, 40)
plot(x,y, pch = 23,  cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23, cex = 2, col = "blueviolet", type = "l")
plot(x,y, pch = 23, cex = 2, col = "gold", type = "b")
plot(x,y, pch = 23, cex = 2, col = "deeppink", type = "o")
plot(x,y, pch = 23, cex = 2, col = "springgreen", type = "h")
plot(x,y, pch = 23, cex = 2, col = "firebrick1", type = "s")
par(mfrow = c(1,1))
title("Tipos de Graficas y sus tipos de lineas")
plot(x,y, pch = 23,  cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23, cex = 2, col = "blueviolet", type = "l")
plot(x,y, pch = 23, cex = 2, col = "gold", type = "b")
plot(x,y, pch = 23, cex = 2, col = "deeppink", type = "o")
plot(x,y, pch = 23, cex = 2, col = "springgreen", type = "h")
plot(x,y, pch = 23, cex = 2, col = "firebrick1", type = "s")
par(mfrow = c(1,1))
par(mfrow = c(3,2))
x = c(50:59)
y = c(2, 9, 25, 3, 100, 77, 62, 54, 19, 40)
title("Tipos de Graficas y sus tipos de lineas")
plot(x,y, pch = 23,  cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23, cex = 2, col = "blueviolet", type = "l")
plot(x,y, pch = 23, cex = 2, col = "gold", type = "b")
plot(x,y, pch = 23, cex = 2, col = "deeppink", type = "o")
plot(x,y, pch = 23, cex = 2, col = "springgreen", type = "h")
plot(x,y, pch = 23, cex = 2, col = "firebrick1", type = "s")
par(mfrow = c(1,1))
datos <- c( 10,1,3,7,7,5)
rating<- sort(datos, decreasing = FALSE, unique(datos))
rating<- sort(datos, decreasing = FALSE, unique(datos, incomparables = FALSE))
datos2<-unique(datos)
datos2
sort(datos2, decreasing = FALSE)
sort(datos2, decreasing = FALSE)
length(datos2$1)
length(datos2 == 10)
count(datos2 == 10)
library(tidyverse)
count(datos2 == 10)
count(datos2)
class(datos2)
sum(datos==7)
datos_sin_1<- datos, !1
datos_sin_1<- c(datos, !=1)
datos_sin_1<- c(datos, 1 = FALSE)
datossin_1<- datos[which(! = 1)]
datossin_1<- datos[which(datos, !=1)
datos[which(datos != "1")]
setwd("C:/Users/Patricio/Mi unidad/Programacion/Portafolio/R/Adidas vs NIke EDA")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)  # Manipulación de datos.
library(tidyverse) # Manipulación de datos.
library(ggplot2) # Visualización de datos.
library(skimr) # Inspección de la estructura de datos y el EDA.
library(visdat) # Resumen visual  de la estructura de los datos.
library(inspectdf)  # Inspección de los datos
library(patchwork) # Multiples plots
head(dataset, n = 5)
dataset<- read.csv("Adidas_Nike_dataset.csv")
head(dataset, n = 5)
dataset <- dataset %>% select(- Description)
dataset <- dataset %>% select(- Product.ID)
dataset <- dataset %>% select(- Last.Visited)
knitr::kable(head(dataset, n= 5), caption = "Table dataset Visualization")
glimpse(dataset)
# La variable Brand pasa a ser un factor
dataset$Brand <- as.factor(dataset$Brand)
# La variable Rating pasa a ser a numerico
dataset$Rating <- as.numeric(dataset$Rating)
# La variable Reviews pasa a ser a numerico
dataset$Reviews <- as.numeric(dataset$Reviews)
glimpse(dataset)
levels(dataset$Brand) # verificamos los nombres (niveles) a reemplazar
# Establecemos los nuevos nombres
mynewnames <- c("Adidas Adidas ORIGINALS" = "Adidas",
"Adidas CORE / NEO" = "Adidas",
"Adidas ORIGINALS" = "Adidas",
"Adidas SPORT PERFORMANCE" = "Adidas",
"Nike" = "Nike")
# Reemplazamos
levels(dataset$Brand) <- mynewnames[levels(dataset$Brand)]
any(is.na(dataset))
inspect_na(dataset) %>% show_plot() # no NA
any(duplicated(dataset))
sum(duplicated(dataset))
dataset <- dataset %>% distinct()
skim(dataset)
setwd("C:/Users/Patricio/Mi unidad/Programacion/Portafolio/R/Adidas vs NIke EDA")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)  # Manipulación de datos.
library(tidyverse) # Manipulación de datos.
library(ggplot2) # Visualización de datos.
library(skimr) # Inspección de la estructura de datos y el EDA.
library(visdat) # Resumen visual  de la estructura de los datos.
library(inspectdf)  # Inspección de los datos
library(patchwork) # Multiples plots
dataset<- read.csv("Adidas_Nike_dataset.csv")
head(dataset, n = 5)
dataset <- dataset %>% select(- Description)
dataset <- dataset %>% select(- Product.ID)
dataset <- dataset %>% select(- Last.Visited)
knitr::kable(head(dataset, n= 5), caption = "Table dataset Visualization")
glimpse(dataset)
# La variable Brand pasa a ser un factor
dataset$Brand <- as.factor(dataset$Brand)
# La variable Rating pasa a ser a numerico
dataset$Rating <- as.numeric(dataset$Rating)
# La variable Reviews pasa a ser a numerico
dataset$Reviews <- as.numeric(dataset$Reviews)
glimpse(dataset)
levels(dataset$Brand) # verificamos los nombres (niveles) a reemplazar
# Establecemos los nuevos nombres
mynewnames <- c("Adidas Adidas ORIGINALS" = "Adidas",
"Adidas CORE / NEO" = "Adidas",
"Adidas ORIGINALS" = "Adidas",
"Adidas SPORT PERFORMANCE" = "Adidas",
"Nike" = "Nike")
# Reemplazamos
levels(dataset$Brand) <- mynewnames[levels(dataset$Brand)]
any(duplicated(dataset))
sum(duplicated(dataset))
dataset <- dataset %>% distinct()
skim(dataset)
skim(dataset)
knitr::kable(head(skim(dataset)), caption = "Descriptive data analysis")
dataset %>%
skim() %>%
yank("summary")
dataset %>%
skim() %>%
yank("numeric")
?yank
skim(dataset, yank(str(dataset)))
dataset %>%
skim()
skim(dataset)
skim(dataset, yank("numeric"))
dataset %>%
+   skim() %>%
+   yank("numeric")
dataset %>%
skim() %>%
yank("numeric")
> dataset %>%
dataset %>%
+ skim() %>%
+ yank("character")
dataset %>%skim() %>%
+ yank("character")
dataset%>%
skim()
dataset%>%
skim()%>%
yank("factor")%>%
yank("character")
dataset%>%
skim()%>%
yank("character")
summarise(dataset)
summary(dataset)
str(dataset)
general <- vis_dat(dataset)
tipos_de_datos <- inspect_types(dataset) %>% show_plot()  # Explorar tipos de datos
inspeccion_categoricos <- inspect_cat(dataset) %>% show_plot() # Explorar datos categoricos
inspeccion_numericos <- inspect_num(dataset) %>% show_plot() # explorar los numericos
plot_resumen <- tipos_de_datos + general +
labs(title = "Dataset description" )
plot_resumen
inspect_num(dataset) %>% show_plot()
corPlot(dataset[, c("Listing.Price", "Sale.Price", "Discount", "Rating", "Reviews")],
min.length = 3)
library(psych)
corPlot(dataset[, c("Listing.Price", "Sale.Price", "Discount", "Rating", "Reviews")],
min.length = 3)
dev.off()
corPlot(dataset[, c("Listing.Price", "Sale.Price", "Discount", "Rating", "Reviews")],
min.length = 3)
dev.off()
knitr::kable( dataset %>%
dplyr::count(Brand)
, caption = "Table dataset Visualization")
knitr::kable( dataset %>%
dplyr::count(Brand)
, caption = "Productos disponibles en el mercado")
ggplot(data = dataset, aes(x = Brand, y = Listing.Price , fill = Brand)) +
geom_violin(trim = FALSE) +
geom_boxplot(outlier.shape = NA , width = 0.05) +
scale_y_continuous(breaks=c(1000, 5000, 10000, 15000, 20000, 25000, 30000)) +
scale_fill_manual(values = c("purple1", "#FFFF00"))+
labs(title = "Listing Price by Brand")+
theme_classic()
ggplot(data = dataset, aes(x = Brand, y = Listing.Price , fill = Brand)) +
geom_violin(trim = FALSE) +
geom_boxplot(outlier.shape = NA , width = 0.05) +
scale_y_continuous(breaks=c(1000, 5000, 10000, 15000, 20000, 25000, 30000)) +
scale_fill_manual(values = c("purple1", "#FFFF00"))+
labs(title = "Listing Price by Brand", x = "", y = "List Price")+
theme_classic()
ggplot(data = dataset, aes(x = Brand, y = Listing.Price , fill = Brand)) +
geom_violin(trim = FALSE) +
geom_boxplot(outlier.shape = NA , width = 0.05) +
scale_y_continuous(breaks=c(1000, 5000, 10000, 15000, 20000, 25000, 30000)) +
scale_fill_manual(values = c("purple1", "#FFFF00"))+
labs(title = "Listing Price by Brand", x = "", y = "List price")+
theme_classic()
ggplot(data = dataset, aes(x = Brand, y = Listing.Price , fill = Brand)) +
geom_violin(trim = FALSE) +
geom_boxplot(outlier.shape = NA , width = 0.05) +
scale_y_continuous(breaks=c(1000, 5000, 10000, 15000, 20000, 25000, 30000)) +
scale_fill_manual(values = c("purple1", "#FFFF00"))+
labs(title = "Listing Price by Brand", x = "", y = "Listing price")+
theme_classic()
